name: Push container image
on: 
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
env:
  image-push-owner: 'k8snetworkplumbingwg'
jobs:
  push-amd64:
    name: Image push/amd64
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        if: github.repository_owner == 'k8snetworkplumbingwg'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push container image
        if: github.repository_owner == 'k8snetworkplumbingwg'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest-amd64
          file: images/Dockerfile
          build-args: |
            git_sha=${{ github.event.pull_request.head.sha }}

      - name: Push stable container image
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{  github.ref_name }}
          file: images/Dockerfile
          build-args: |
            git_sha=${{ github.event.pull_request.head.sha }}

      - name: Install the j2 dependency
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          pip3 install --user --upgrade j2cli
          j2 --version

      - name: Template release manifests
        if: startsWith(github.ref, 'refs/tags/')
        run: IMAGE_TAG=${{  github.ref_name }} make manifests

      - name: Release the kraken
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          files: |
            manifests/crio-dynamic-networks-controller.yaml
            manifests/dynamic-networks-controller.yaml
